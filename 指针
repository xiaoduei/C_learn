1. 不允许创建临时变量，交换两个整数的内容

2. 写一个函数返回参数二进制中 1 的个数( 牛客网的OJ链接)

例如： 15    0000 1111    4 个 1

程序原型：

int count_one_bits(unsigned int value)
{
 // 返回 1的位数
}

3. 获取一个整数二进制序列中所有的偶数位和奇数位。

要求：分别打印出二进制序列。



4. 编程实现：牛客网的OJ链接 

两个int（32位）整数m和n的二进制表达中，有多少个位(bit)不同？ 

输入例子:

1999 2299

输出例子:7

```c
1.

void swap_int(int* a, int* b)

{

	*a = *a + *b;

	*b = *a - *b;

	*a = *a - *b;

}



2.

int count_one_bits(unsigned int value)

{

	// 返回 1的位数

	int count = 0;

	while (value) {

		int mod = value % 2;

		value = value / 2;

		if (mod == 1) {

			count++;

		}

	}

	return count;

}



3.

void print_even_odd(unsigned int value)

{

	int dig = 0;				//记录运行到value的第几位数

	int odd[1024], even[1024], i = 0, j = 0;	//记录偶数和奇数序列

	while (value) {

		int mod = value % 2;

		value = value / 2;

		if (dig % 2 == 0) {

			even[i] = mod;

			i++;

			

		}

		else if (dig % 2 == 1) {

			odd[j] = mod;

			j++;

		}

		dig++;

	}

	printf("偶数序列为:");

	for (int k = 0; k < i; k++) {

		printf("%d\t", even[k]);

	}

	putchar('\n');

	printf("奇数序列为:");

	for (int k = 0; k < j; k++) {

		printf("%d\t", odd[k]);

	}

}
